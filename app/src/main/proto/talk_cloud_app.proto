syntax = "proto3";

package talk_cloud;

import "talk_cloud_model.proto";


service TalkCloud {
    // 注册
    rpc AppRegister (AppRegReq) returns (AppRegRsp) {
    }
    rpc DeviceRegister (DeviceRegReq) returns (DeviceRegRsp) {
    }
    rpc Login (LoginReq) returns (LoginRsp) {
    }
    rpc Logout (LogoutReq) returns (LogoutRsp) {
    }
    rpc SetLockGroupId (SetLockGroupIdReq) returns (SetLockGroupIdResp) {
    };

    // 推送im数据
    rpc ImMessagePublish (ImMsgReqData) returns (ImMsgRespData) {
    };

    // 登陆数据、IM离线数据、心跳
    rpc DataPublish (stream StreamRequest) returns (stream StreamResponse) {
    };

    // 好友管理
    rpc AddFriend (FriendNewReq) returns (FriendNewRsp) {
    }
    rpc DelFriend (FriendDelReq) returns (FriendDelRsp) {
    }
    rpc GetFriendList (FriendsReq) returns (FriendsRsp) {
    }
    rpc SearchUserByKey (UserSearchReq) returns (UserSearchRsp) {
    }

    // 组管理
    rpc CreateGroup (CreateGroupReq) returns (CreateGroupResp) {
    };
    rpc JoinGroup (GrpUserAddReq) returns (GrpUserAddRsp) {
    }
    rpc RemoveGrpUser (GrpUserDelReq) returns (GrpUserDelRsp) {
    }
    rpc ExitGrp (UserExitReq) returns (UserExitRsp) {
    }
    rpc RemoveGrp (GroupDelReq) returns (GroupDelRsp) {
    }
    rpc GetGroupList (GrpListReq) returns (GroupListRsp) {
    }
    rpc SearchGroup (GrpSearchReq) returns (GroupListRsp) {
    }
    rpc InviteUserIntoGroup(InviteUserReq) returns (InviteUserResp) {};

    // 进入某个群组，获取群成员等信息
    rpc GetGroupInfo(GetGroupInfoReq) returns (GetGroupInfoResp){};

}

/*************** Register ***************/
// 头部信息
message Head {
    string version = 1; // 主版本号
    string sub_version = 2; // 子版本号
    int32 timestamp = 3; // 时间戳
}

// App注册请求
message AppRegReq {
    Head head = 1;
    string name = 2;
    string password = 3;
}

// App注册响应
message AppRegRsp {
    int32 id = 1;
    string userName = 2;
    Result res = 3;
}

// Device注册请求
message DeviceRegReq {
    int32 account_id = 1; // 管理账户ID
    string device_list = 2; // IMEI列表
}

// Device注册响应
message DeviceRegRsp {
    Result res = 1;
}

// 登录请求
message LoginReq {
    Head head = 1;
    string name = 2;
    string passwd = 3;
}

message LoginRsp {
    Member userInfo = 1;
    repeated FriendRecord friend_list = 2;
    repeated GroupInfo group_list = 3;
    Result res = 4;
}

// 获取ImMsg请求  // 实际用不到
message ImMsgReqData {
    int32 id = 1; // 谁发的，
    int32 ReceiverType = 2; // 是单独，还是发给群组
    int32 ReceiverId = 3; // 接受者的id，群组就是群组id
    string ResourcePath = 4; // 资源文件路径
    int32 MsgType = 5;
}

// http client 返回数据
message ImMsgRespData {
    Result result = 1;
}

// 登出请求
message LogoutReq {
    Head head = 1;
    string name = 2;
}

message LogoutRsp {
    Result res = 1;
}

// 设置群组锁定
message SetLockGroupIdReq {
    int32 uId = 1;
    int32 gId = 2;
}

message SetLockGroupIdResp {
    Result Res = 1;
}

/**
	FIRST_LOGIN_DATA   = 1 // 初次登录返回的数据。比如用户列表，群组列表，该用户的个人信息
	OFFLINE_IM_MSG     = 2 // 用户离线时的IM数据
	IM_MSG_FROM_UPLOAD = 3 // APP和web通过httpClient上传的IM信息
	KEEP_ALIVE_MSG     = 4 // 用户登录后，每隔interval秒向stream发送一个消息，测试能不能连通
*/

message StreamRequest {
    int32 uid = 1;
    int32 dataType = 2; // 具体值 1 登录， 2 是离线数据 3 是 Im

    string name = 3;
    string passwd = 4;

//    int32 ACK = 5;

    UploadFileData FileDataReq = 6;

    ImMsgReqData imMsg = 7;

}

message UploadFileData {
    int32 id = 1; // 谁发的，是单独，还是发给群组
    int32 sendType = 2;
    int32 ReceiverId = 3; // 接受者的id，群组就是群组id
}

message ImReceiver {
    int32 type = 1; // 1 是发送给群组， 2是发送给个人
    GroupInfo groupInfo = 2;
    Member userInfo = 3;
}


message StreamResponse {
    int32 uid = 1;
    int32 DataType = 2; // 1 是返回登录数据， 2是推送ImMsgData， 3 是keepalive
    FirstLoginData loginResp = 3;
    ImMsgReqData imMsgData = 4;
    KeepAlive keepAlive = 5;
    Result res = 6;
}

message FirstLoginData {
    Member userInfo = 1;
    repeated FriendRecord friend_list = 2;
    repeated GroupInfo group_list = 3;
}

message KeepAlive {
    int32 uid = 1;
    int32 SYN = 2;
}

message ImMsgData {
    int32 uid = 1;
    string path = 2;
    ImReceiver receiver = 3;
}

/************** User_Friend *************/
message FriendNewReq {
    int32 uid = 1;
    int32 fuid = 2;
}

message FriendNewRsp {
    Result res = 1;
}

message FriendDelReq {
    int32 uid = 1;
    int32 fuid = 2;
    int32 timestamp = 3;
}

message FriendDelRsp {
    Result err = 1;
}

message FriendsReq {
    int32 uid = 1;
}

message FriendRecord {
    int32 uid = 1;
    string name = 2;
    int64 imei = 3;
}

message FriendsRsp {
    int32 uid = 1;
    repeated FriendRecord friend_list = 2;
    Result res = 3;
}

message UserSearchReq {
    int32 uid = 1;
    string target = 2;
}

message UserRecord {
    int32 uid = 1;
    string imei = 2;
    string name = 3;
    int32 online = 4;
    int32 LockGroupId = 5;
    int32 user_type = 6;   // 用户类型
    int32 grp_role = 7;   // 2 群主  1 普通群成员
    bool isFriend =8;    // 是否是好友
}

message UserSearchRsp {
    Result res = 1;
    repeated UserRecord user_list = 2;

}
/**************** Group *****************/

message CreateGroupReq {
    //    repeated int32 deviceIds = 1;
    string deviceIds = 1;
    string groupName = 2;
    int32 accountId = 3;
    repeated Member deviceInfos = 4;
    Group groupInfo = 5;
}

message CreateGroupResp {
    GroupInfo GroupInfo = 1;
    Result res = 2;
}

//user join group
message GrpUserAddReq {
    int32 uid = 1;
    int32 gid = 2;
    int32 timestamp = 3;
}

message GrpUserAddRsp {
    Result res = 1;
}

message GrpUserDelReq {
    int32 uid = 1;
    int32 gid = 2;
    int32 timestamp = 3;
}

message GrpUserDelRsp {
    Result res = 1;
}

message UserExitReq {
    int32 uid = 1;
    int32 gid = 2;
}

message UserExitRsp {
    Result res = 1;
}

message GroupDelReq {
    int32 uid = 1;
    int32 role_type = 2;
    int32 gid = 3;
}

message GroupDelRsp {
    Result res = 1;
}

message GrpListReq {
    int32 uid = 1;
}

message GroupInfo {
    int32 gid = 1;
    string group_name = 2;
    int32 group_manager = 3;
    repeated UserRecord usr_list = 4;     // 群里的成员
    bool isExist = 5;    // 该用户是否默认在这个组
}

// 返回模糊查找以及目前用户所在的群组
message GroupListRsp {
    int32 uid = 1;
    repeated GroupInfo group_list = 2;
    Result res = 3;
}

message GrpSearchReq {
    int32 uid = 1;
    string target = 2;
}

message InviteUserReq {
    int32 gid = 1;
    string uids = 2;
}

message InviteUserResp {
    repeated UserRecord usr_list = 1;     // 群里的成员
    Result res = 2;
}

message GetGroupInfoReq {
    int32 gid = 1;
    int32 uid = 2;
}

message GetGroupInfoResp {
   GroupInfo groupInfo = 1;
    Result res = 2;
}
